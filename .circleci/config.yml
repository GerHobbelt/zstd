version: 2
jobs:
  dependencies:
    # TODO: We could use our own docker image that comes with all our
    # dependencies preinstalled.
    docker:
      - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
    steps:
      - checkout
      - run: sudo dpkg --add-architecture i386
      - run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; sudo apt-get -y -qq update
      - run: sudo apt-get -y install gcc-powerpc-linux-gnu gcc-arm-linux-gnueabi libc6-dev-armel-cross gcc-aarch64-linux-gnu libc6-dev-arm64-cross
  test0:
    docker:
      - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
    steps:
      - run: |
          cc -v; CFLAGS="-O0 -Werror" make all && make clean;
          make c99build     && make clean;
          make c11build     && make clean;
          make aarch64build && make clean;
          make -j regressiontest && make clean;
          make shortest     && make clean;
          make cxxtest      && make clean;
  test1:
    docker:
      - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
    steps:
      - run: |
          make gnu90build   && make clean;
          make gnu99build   && make clean;
          make ppc64build   && make clean;
          make ppcbuild     && make clean;
          make armbuild     && make clean;
          make -C tests test-legacy test-longmatch test-symbols && make clean;
          make -C lib libzstd-nomt && make clean;
  publish-github-release:
    docker:
      - image: cibuilds/github:0.12.0
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    steps:
      - run: |
          echo Publishing release to $CIRCLE_ARTIFACTS
      - store_artifacts:
          path: /tmp/circleci-artifacts
workflows:
  version: 2
  build-test-publish:
    jobs:
      - dependencies
      - test0:
          requires:
            - dependencies
      - test1:
          requires:
            - dependencies
      - publish-github-release:
          requires:
            - test0
            - test1
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/

  # Longer tests
    #- make -C tests test-zstd-nolegacy && make clean
    #- pyenv global 3.4.4; make -C tests versionsTest && make clean
    #- make zlibwrapper         && make clean
    #- gcc -v; make -C tests test32 MOREFLAGS="-I/usr/include/x86_64-linux-gnu" && make clean
    #- make uasan               && make clean
    #- make asan32              && make clean
    #- make -C tests test32 CC=clang MOREFLAGS="-g -fsanitize=address -I/usr/include/x86_64-linux-gnu"
  # Valgrind tests
    #- CFLAGS="-O1 -g" make -C zlibWrapper valgrindTest && make clean
    #- make -C tests valgrindTest && make clean
  # ARM, AArch64, PowerPC, PowerPC64 tests
    #- make ppctest             && make clean
    #- make ppc64test           && make clean
    #- make armtest             && make clean
    #- make aarch64test         && make clean
